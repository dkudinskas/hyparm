/*
 * STMDB Rn!, {sp,pc}
 */

.syntax unified

.text
.arm

.global _start
_start:

/* lr will be chosen as substitute register for pc */
MOV    r0, #0x81000000
MOVW   sp, #0x7733
MOVT   sp, #0xff99
MOV    lr, #0
MOV    r1, r0
STMDB  r0!, {sp,pc}
/* r0 must be decremented, lr (substitute) must still hold its original value */
ADD    r0, r0, #8
CMP    r0, r1
BNE    fail
CMP    lr, #0
BNE    fail
/* construct PC of STM instruction in r1, given that load address = 0x80000000 */
MOVW   r1, #0x1c
MOVT   r1, #0x8000
/* 'decrement before' implies registers start at the address in r0 - 8, load this */
LDR    r2, [r0, #-8]
CMP    r2, sp
LDREQ  r3, [r0, #-4]
CMPEQ  r3, r1
BNE    fail
BKPT   #0

fail:
BKPT   #1